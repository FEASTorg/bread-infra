name: KiBot CI/CD

on:
  workflow_call:
    outputs:
      kibot_run_id:
        description: "Run ID to fetch artifacts from"
        value: ${{ jobs.meta.outputs.run_id }}

env:
  OUT_DIR: Generated

permissions:
  contents: read

jobs:
  meta:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.setid.outputs.run_id }}
    steps:
      - id: setid
        run: echo "run_id=$GITHUB_RUN_ID" >> "$GITHUB_OUTPUT"

  ERC:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad9_auto:latest
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }
      - name: Run ERC
        run: make -C hardware/ erc

  DRC:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad9_auto:latest
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }
      - name: Run DRC
        run: make -C hardware/ drc

  Fab:
    runs-on: ubuntu-latest
    container: ghcr.io/inti-cmnb/kicad9_auto_full:latest
    steps:
      - uses: actions/checkout@v4
        with: { submodules: true }

      - name: Ensure cache dir exists
        run: mkdir -p ~/cache_3d

      - name: Cache 3D models
        id: cache-3d
        uses: actions/cache@v4
        with:
          path: ~/cache_3d
          key: cache_3d-v1
          restore-keys: |
            cache_3d-

      - name: Generate SCH files
        run: |
          export KIBOT_3D_MODELS="$HOME/cache_3d"
          make -C hardware/ sch_fab

      - name: Generate PCB Fab Files (with retry)
        run: |
          export KIBOT_3D_MODELS="$HOME/cache_3d"
          for i in 1 2 3; do
            if make -C hardware/ pcb_fab; then
              echo "Success on attempt $i"
              break
            elif [ $i -eq 3 ]; then
              echo "Failed after 3 attempts"
              exit 1
            else
              echo "Attempt $i failed, retrying in 10s..."
              sleep 10
            fi
          done

      - name: Upload KiBot outputs
        uses: actions/upload-artifact@v4
        with:
          name: kibot-site
          path: hardware/${{ env.OUT_DIR }}
